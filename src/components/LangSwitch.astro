---
import { locales } from '../locales';

const locale = Astro.currentLocale
import { getRelativeLocaleUrl } from 'astro:i18n';
import {stripLang} from "../helpers/i18n/stripLang";
import {fixBlogLocale} from "../helpers/i18n/fixBlogLocale";
const currentPathWithLang = Astro.url.pathname;
const currentPath = stripLang(currentPathWithLang)

import { getCollection, getEntry } from 'astro:content';

let entry = undefined
let translatedPosts = []

function getPostId(path:string):string {
    path = path.replace('/posts/', '');
    return path.replace(/\/$/,'');
}

if(currentPath.includes('posts/')) {
    entry = await getEntry('blog', getPostId(currentPath));
    translatedPosts = await getCollection('blog',
        (post) => post.data.canonicalName === entry.data.canonicalName
    );
}

---

<div>
    <pre>{locale} | {currentPath} | {translatedPosts.map(p => p.slug).join(';')}</pre>
    <ul>
    {locales.map(
        locale => <li>
            <a href={
                fixBlogLocale(
                    getRelativeLocaleUrl(
                        locale,
                        currentPath
                    ),
                    locale,
                    translatedPosts.map(p => p.slug)
                )
            }>
                {locale}
            </a>
        </li>
    )}
    </ul>
</div>